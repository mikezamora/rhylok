(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const r of t.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function p(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function s(e){if(e.ep)return;e.ep=!0;const t=p(e);fetch(e.href,t)}})();console.log("Hello from TypeScript! This will become WASM.");const a=document.getElementById("app");a&&console.log("Found app element!");const i=document.getElementById("test-button");i&&i.addEventListener("click",()=>{console.log("Button clicked from TypeScript!"),f()});const l=document.getElementById("dom-test"),c=document.getElementById("output-area");l&&c&&l.addEventListener("click",()=>{c.textContent=`Updated at ${new Date().toLocaleTimeString()}`,console.log("DOM updated successfully!")});const u=document.getElementById("process-text"),d=document.getElementById("text-input");u&&d&&c&&u.addEventListener("click",()=>{const o=d.value,n=m(o);c.textContent=`Processed: "${n}"`,console.log(`Text processed: ${o} -> ${n}`)});function f(){console.log("handleButtonClick called - this will be a WASM function!");const o=document.getElementById("output-area");o&&(o.textContent="Button clicked! WASM is working!")}function m(o){return o.split("").reverse().join("").toUpperCase()}console.log("TypeScript example initialized - ready for WASM conversion!");
